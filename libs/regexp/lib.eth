module =
  let pub create arg =
{.help|
\e[1mTYPE\e[0m
  (1) create string? -> regexp?
  (2) create (string?, number?) -> regexp?

\e[1mDESCRIPTION\e[0m
  Compile string into regular expression. In order to specify PCRE-options use
  signature (2).

  See available options in RegExp.pcre_*. See \`man pcre_compile\` for meanings.
|.help}
  if let (pat, opt) = arg
    then _create pat opt
    else _create arg 0

  let pub study =
{.help|
\e[1mTYPE\e[0m
  study regexp? -> regexp?

\e[1mDESCRIPTION\e[0m
  Optimize regular expression for better performance in subsequent executions.
  JIT compilation is performed if available. This operation is "mutable", and
  returned value \`is\` the original argument. The same expression may be studied
  multiple times, only the first study will be actually evaluated.

  Note: regular expressions created as constants (using \`\ ... /\`-syntax) are
  already studied during parsing.
|.help}
  _study
end
