
open 'string'

--------------------------------------------------------------------------------
-- Functions:
-- * chdir
-- * access
-- * getcwd
-- * realpath
--
-- Values:
-- * f_ok, r_ok, w_ok, x_ok

let pub F_OK = __f_ok
let pub R_OK = __r_ok
let pub W_OK = __w_ok
let pub X_OK = __x_ok

let pub O_CLOEXEC = __o_cloexec
let pub O_DIRECT = __o_direct
let pub O_NONBLOCK = __o_nonblock

let pub chdir = __chdir

let pub access = {
  {help|
  = Os.access

  == SYNOPSIS

    access <path> <amode> -> boolean?

  == DESCRIPTION
  The function shall chek the file named by  the  pathname  (possibly  relative)
  _path_ for acessibility according to the bit pattern specified in _amode_.

  The value of _amode_  is either the bitwise-inclusive OR of \`R_OK`, \`W_OK`, \`X_OK` or existence test, \`F_OK`.

  See also man(3) access for complete documentation.
  |help}
  __access
}

let pub getcwd = __getcwd

let pub getenv = __getenv
let pub setenv(x) {
  if let #(name value overwrite?) = x then
    __setenv(name, value, overwrite?)
  else {
    let name = x
    fn value -> __setenv(name, value, true)
  }
}

let pub realpath(path) {
  if {substr(path, 0 .. 1, path) eq "~/"} or false
  then __realpath(getenv("HOME") ++ substr(1..*, path))
  else __realpath(path)
}

let pub mkdtemp = {
  {help|
  = Os.mkdtemp

  == Synopsis

    mkdtemp <template-string> -> string?

  == DESCRIPTION
  Create temporary directory with name created from _template-string_  and  return
  obtained path.

  ==== ARGUMENTS
  - _emplate-string_: Template path for the directory ending with six 'X' characters.
  |help}
  __mkdtemp
}

let pub fork = __fork
let pub waitpid = __waitpid

let pub pipe = __pipe
let pub pipe2 = __pipe2

let pub fileno = __fileno

